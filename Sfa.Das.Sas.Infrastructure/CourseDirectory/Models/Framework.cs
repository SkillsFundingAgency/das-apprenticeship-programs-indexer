// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System.Collections.Generic;
using Microsoft.Rest;
using Newtonsoft.Json.Linq;

namespace Sfa.Das.Sas.Indexer.Infrastructure.CourseDirectory.Models
{
    public class Framework
    {
        /// <summary>
        ///     Initializes a new instance of the Framework class.
        /// </summary>
        public Framework()
        {
            Locations = new LazyList<LocationRef>();
        }

        /// <summary>
        ///     Initializes a new instance of the Framework class with required
        ///     arguments.
        /// </summary>
        public Framework(int frameworkCode, int pathwayCode, int level)
            : this()
        {
            FrameworkCode = frameworkCode;
            PathwayCode = pathwayCode;
            Level = level;
        }

        /// <summary>
        ///     Optional.
        /// </summary>
        public Contact Contact { get; set; }

        /// <summary>
        ///     Required.
        /// </summary>
        public int FrameworkCode { get; set; }

        /// <summary>
        ///     Required.
        /// </summary>
        public int Level { get; set; }

        /// <summary>
        ///     Optional.
        /// </summary>
        public IList<LocationRef> Locations { get; set; }

        /// <summary>
        ///     Required.
        /// </summary>
        public int PathwayCode { get; set; }

        public string FrameworkInfoUrl { get; set; }

        public string MarketingInfo { get; set; }

        /// <summary>
        ///     Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                var contactValue = inputObject["contact"];
                if (contactValue != null && contactValue.Type != JTokenType.Null)
                {
                    var contact = new Contact();
                    contact.DeserializeJson(contactValue);
                    Contact = contact;
                }

                var frameworkCodeValue = inputObject["frameworkCode"];
                if (frameworkCodeValue != null && frameworkCodeValue.Type != JTokenType.Null)
                {
                    FrameworkCode = (int)frameworkCodeValue;
                }

                var levelValue = inputObject["level"];
                if (levelValue != null && levelValue.Type != JTokenType.Null)
                {
                    Level = (int)levelValue;
                }

                var locationsSequence = inputObject["locations"];
                if (locationsSequence != null && locationsSequence.Type != JTokenType.Null)
                {
                    foreach (var locationsValue in (JArray)locationsSequence)
                    {
                        var locationRef = new LocationRef();
                        locationRef.DeserializeJson(locationsValue);
                        Locations.Add(locationRef);
                    }
                }

                var pathwayCodeValue = inputObject["pathwayCode"];
                if (pathwayCodeValue != null && pathwayCodeValue.Type != JTokenType.Null)
                {
                    PathwayCode = (int)pathwayCodeValue;
                }

                var frameworkInfoUrlValue = inputObject["frameworkInfoUrl"];
                if (pathwayCodeValue != null && pathwayCodeValue.Type != JTokenType.Null)
                {
                    FrameworkInfoUrl = frameworkInfoUrlValue.ToString();
                }

                var marketingInfoValue = inputObject["marketingInfo"];
                if (pathwayCodeValue != null && pathwayCodeValue.Type != JTokenType.Null)
                {
                    MarketingInfo = marketingInfoValue.ToString();
                }
            }
        }
    }
}