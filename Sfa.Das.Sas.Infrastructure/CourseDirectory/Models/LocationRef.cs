// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System.Collections.Generic;
using Microsoft.Rest;
using Newtonsoft.Json.Linq;

namespace Sfa.Das.Sas.Indexer.Infrastructure.CourseDirectory.Models
{
    public class LocationRef
    {
        /// <summary>
        ///     Initializes a new instance of the LocationRef class.
        /// </summary>
        public LocationRef()
        {
            DeliveryModes = new LazyList<string>();
        }

        /// <summary>
        ///     Initializes a new instance of the LocationRef class with required
        ///     arguments.
        /// </summary>
        public LocationRef(int id)
            : this()
        {
            ID = id;
        }

        /// <summary>
        ///     Optional.
        /// </summary>
        public IList<string> DeliveryModes { get; set; }

        /// <summary>
        ///     Required.
        /// </summary>
        public int ID { get; set; }

        /// <summary>
        ///     Optional.
        /// </summary>
        public string MarketingInfo { get; set; }

        /// <summary>
        ///     Optional.
        /// </summary>
        public int Radius { get; set; }

        /// <summary>
        ///     Optional.
        /// </summary>
        public string StandardInfoUrl { get; set; }

        /// <summary>
        ///     Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                var deliveryModesSequence = inputObject["deliveryModes"];
                if (deliveryModesSequence != null && deliveryModesSequence.Type != JTokenType.Null)
                {
                    foreach (var deliveryModesValue in (JArray)deliveryModesSequence)
                    {
                        DeliveryModes.Add((string)deliveryModesValue);
                    }
                }

                var idValue = inputObject["id"];
                if (idValue != null && idValue.Type != JTokenType.Null)
                {
                    ID = (int)idValue;
                }

                var marketingInfoValue = inputObject["marketingInfo"];
                if (marketingInfoValue != null && marketingInfoValue.Type != JTokenType.Null)
                {
                    MarketingInfo = (string)marketingInfoValue;
                }

                var radiusValue = inputObject["radius"];
                if (radiusValue != null && radiusValue.Type != JTokenType.Null)
                {
                    Radius = (int)radiusValue;
                }

                var standardInfoUrlValue = inputObject["standardInfoUrl"];
                if (standardInfoUrlValue != null && standardInfoUrlValue.Type != JTokenType.Null)
                {
                    StandardInfoUrl = (string)standardInfoUrlValue;
                }
            }
        }
    }
}